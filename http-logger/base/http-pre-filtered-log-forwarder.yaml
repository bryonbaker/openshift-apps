apiVersion: observability.openshift.io/v1
kind: ClusterLogForwarder
metadata:
  name: filtered-app-logging
  namespace: http-logger
spec:
  managementState: Managed
  inputs:
#     - name: my-app-logs
#       type: application
#       application:
#         includes:
#           - namespace: "sleeper"
    - name: my-audit-logs
      type: audit
      audit:
        sources:
          - kubeAPI
          - openshiftAPI
  outputs:
    # - name: default-lokistack
    #   type: lokistack
    #   lokiStack:
    #     authentication:
    #       token:
    #         from: serviceAccount
    #     target: # This is the name of the Loki Stack installed via the Operator
    #       name: logging-loki
    #   tls:
    #     ca:
    #       configMapName: openshift-service-ca.crt
    #       key: service-ca.crt
    - name: logging-http
      type: http
      http:
        url: 'http://http-logger-route-http-logger.apps.awsocp.sandbox2969.opentlc.com/'
        method: POST
    # - name: logging-kafka
    #   type: kafka
    #   kafka:
    #     url: 'http://logging-cluster-kafka-bootstrap.streams-kafka.svc.cluster.local:9092'
    #     topic: cluster-events
  filters:
  - drop:
    - test:
      - field: .objectRef.namespace
        notMatches: sleeper
    - test:
      - field: .objectRef.resource
        notMatches: virtualmachineinstances
      - field: .objectRef.resource
        notMatches: pods
    - test:
      - field: .verb
        notMatches: create
      - field: .verb
        notMatches: delete
  pipelines:
    - inputRefs:
        - audit
      filterRefs:
        - monitor-namespace
      outputRefs:
        - logging-http
#        - logging-kafka
#        - logging-loki
      name: app-logs-pipeline
  serviceAccount:
    name: http-log-collector-sa
